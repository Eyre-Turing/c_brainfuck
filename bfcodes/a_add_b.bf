# a application for calculate A(input a char) add B(input a char)

# 105 110 112 117 116 = input
# 58 = :
# 32 = _space_
# 65 = A
# 66 = B
# 43 = add
# 61 = =
# 97 = a
# 99 = c
# 104 = h
# 114 = r
# 40 = (
# 41 = )

# byte 0 save times __ as a temp var
# byte 1~5 save input
# byte 6 save _space_
# byte 7 save A
# byte 8 save B
# byte 9 save :
# byte 10 save user input A val
# byte 11 save user input B val
# byte 12 save symb add
# byte 13 save =
# byte 14 save a
# byte 15~18 save char
# byte 19 save (
# byte 20 save )

+++++++++++++++++++++++++++++++++++........
[-]
++++++++++.
[-]

++++++++++                  # set byte 0 = 10
[->++++++++++<]>+++++       # set byte 1 = 105
<++++++++++                 # set byte 0 = 10
[->>+++++++++++<<]          # set byte 2 = 110
++++++++++                  # set byte 0 = 10
[->>>+++++++++++<<<]>>>++   # set byte 3 = 112
<<<++++++++++               # set byte 0 = 10
[->>>>++++++++++++<<<<]>>>>---        # set byte 4 = 117
[<]++++++++++               # set byte 0 = 10
[->>>>>++++++++++++<<<<<]>>>>>----    # set byte 5 = 116
[<]++++++++++               # set byte 0 = 10
[->>>>>>+++<<<<<<]>>>>>>++  # set byte 6 = 32
[<]++++++++++
[->>>>>>>++++++<<<<<<<]>>>>>>>+++++   # set byte 7 = 65
[<]+++++++++++
[->>>>>>>>++++++<<<<<<<<]   # set byte 8 = 66
++++++++++
[->>>>>>>>>++++++<<<<<<<<<]>>>>>>>>>--  # set byte 9 = 58
[<]
>>>>>>>>>>+>+  # set byte 10 11 = 1
[<]
++++++++++
[->>>>>>>>>>>>++++<<<<<<<<<<<<]>>>>>>>>>>>>+++ # set byte 12 = add
[<]
++++++++++
[->>>>>>>>>>>>>++++++<<<<<<<<<<<<<]>>>>>>>>>>>>>+ # set byte 13 = =
[<]
++++++++++
[->>>>>>>>>>>>>>++++++++++<<<<<<<<<<<<<<]>>>>>>>>>>>>>>--- # set byte 14 = a
[<]
++++++++++
[->>>>>>>>>>>>>>>++++++++++>++++++++++>++++++++++>++++++++++<<<<<<<<<<<<<<<<<<] # set byte 15 16 17 18 = 100
>>>>>>>>>>>>>>>>>>++++++++++++++              # set byte 18 = r
<---                        # set byte 17 = a
<++++                       # set byte 16 = h
<-                          # set byte 15 = c
[<]
++++++++++
[->>>>>>>>>>>>>>>>>>>++++>++++<<<<<<<<<<<<<<<<<<<<]  # set byte 19 20 = (
>>>>>>>>>>>>>>>>>>>>+
[<]

>.>.>.>.>.>.>.>>>>>>>>>>>>.<<<<<.<<<<<<<<.>>>>>>>>>.>.>.>.>>.<<<<<<<<<<<.<<<.       # print input A(a char):
[<]                         # set current pointer to byte 0
>>>>>>>>>>,                 # save user input A in byte 10
[<],[-]
>.>.>.>.>.>.>>.>>>>>>>>>>>.<<<<<.<<<<<<<<.>>>>>>>>>.>.>.>.>>.<<<<<<<<<<<.<<<.       # print input B(a char):
[<]
>>>>>>>>>>>,                # save user input B in byte 11
[<],[-]

[-]

>>>>>>>.>>.<<<.>>>>.        # print A val
[<]++++++++++.[-]           # print \n
>>>>>>>>.>.<<<.>>>>>.       # print B val
[<]++++++++++.[-]           # print \n
[<]

>>>>>>>.<.>>>>>>.<<<<<<.>>.<<.>>>>>>>.<<<<<<<.>>>>.>.  # print A add B = AB

[<]++++++++++.
+++++++++++++++++++++++++........
[-]
++++++++++.
